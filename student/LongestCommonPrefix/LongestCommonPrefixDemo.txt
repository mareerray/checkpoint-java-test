import java.util.*;

public class LongestCommonPrefix {
    public String findLongestCommonPrefix(String[] strs) {
        // Edge cases
        if (strs == null || strs.length == 0) return "";
        if (strs.length == 1) return strs[0];

        // Start with the first string as the prefix
        String prefix = strs[0];

        // For every other string, shrink the prefix as needed
        for (int i = 1; i < strs.length; i++) {
            while (!strs[i].startsWith(prefix)) {
                // Remove the last character from prefix
                prefix = prefix.substring(0, prefix.length() - 1);
                // If prefix is empty, no common prefix exists
                if (prefix.isEmpty()) return "";
            }
        }
        // When done, prefix is the answer
        return prefix;
    }

    public static void main(String[] args) {
        LongestCommonPrefix lcp = new LongestCommonPrefix();

        String[] strs1 = {"flower", "flow", "flight"};
        System.out.println("Input: [flower, flow, flight]");
        System.out.println("Longest common prefix: " + lcp.findLongestCommonPrefix(strs1));

        String[] strs2 = {"dog", "racecar", "car"};
        System.out.println("\nInput: [dog, racecar, car]");
        System.out.println("Longest common prefix: " + lcp.findLongestCommonPrefix(strs2));

        String[] strs3 = {"interspecies", "interstellar", "interstate"};
        System.out.println("\nInput: [interspecies, interstellar, interstate]");
        System.out.println("Longest common prefix: " + lcp.findLongestCommonPrefix(strs3));
    }
}

