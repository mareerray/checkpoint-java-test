import java.util.HashMap;
import java.util.Map;

public class DistinctSubstringLength {
    public int maxLength(String s) {
        if (s == null || s.isEmpty()) return 0;

        Map<Character, Integer> charIndexMap = new HashMap<>();
        int maxLength = 0;
        int start = 0;

        for (int end = 0; end < s.length(); end++) {
            char c = s.charAt(end);

            if (charIndexMap.containsKey(c) && charIndexMap.get(c) >= start) {
                // Duplicate found: move 'start' to one position after last occurrence
                start = charIndexMap.get(c) + 1;
            }
            charIndexMap.put(c, end); // update last seen index

            int length = end - start + 1;
            maxLength = Math.max(maxLength, length);
        }
        return maxLength;
    }

    public static void main(String[] args) {
        DistinctSubstringLength finder = new DistinctSubstringLength();
        System.out.println(finder.maxLength("abcabcbb")); // 3
        System.out.println(finder.maxLength("bbbbb"));    // 1
        System.out.println(finder.maxLength("pwwkew"));   // 3
        System.out.println(finder.maxLength(""));         // 0
    }
}
