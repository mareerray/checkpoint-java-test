import java.util.*;
import java.util.regex.*;


public class HTMLValidator {
   private static final Set<String> ALLOWED_TAGS = new HashSet<>(Arrays.asList(
    "html", "body", "div", "p", "b", "i", "h1", "h2", "br"
));


    public boolean validateHTML(String html) {
        Pattern tagPattern = Pattern.compile("<(/?)([a-z0-9]+)(/?)>");
        Matcher matcher = tagPattern.matcher(html);
        Stack<String> stack = new Stack<>();

        while (matcher.find()) {
            String slash = matcher.group(1);
            String tag = matcher.group(2);
            String selfClosing = matcher.group(3);

            if (!ALLOWED_TAGS.contains(tag)) return false;

            if (!slash.isEmpty()) {
                // closing tag
                if (stack.isEmpty() || !stack.pop().equals(tag)) return false;
            } else if (!selfClosing.isEmpty()) {
                // self-closing tag, do nothing
                continue;
            } else {
                // opening tag
                stack.push(tag);
            }
        }
        return stack.isEmpty();
    }

    // Optionally, you could add a method to print the result
    public static void main(String[] args) {
        HTMLValidator validator = new HTMLValidator();

        // Try changing these inputs for different test cases!
        String test1 = "<html><body><div></div></body></html>"; // Valid
        String test2 = "<div><p></div></p>"; // Invalid
        String test3 = "<custom></custom>"; // Invalid - unknown tag
        String test4 = "<div><br/></div>"; // Valid

        System.out.println("Test 1: " + validator.validateHTML(test1)); // true
        System.out.println("Test 2: " + validator.validateHTML(test2)); // false
        System.out.println("Test 3: " + validator.validateHTML(test3)); // false
        System.out.println("Test 4: " + validator.validateHTML(test4)); // true
    }
}